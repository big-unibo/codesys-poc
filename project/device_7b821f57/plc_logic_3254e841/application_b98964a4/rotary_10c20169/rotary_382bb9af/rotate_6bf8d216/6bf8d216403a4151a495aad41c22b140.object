{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)6bf8d216-403a-4151-a495-aad41c22b140","ParentGuid":"(Guid)382bb9af-dadb-431f-b113-f463b51ebab4","Name":"(string)Rotate","Properties":{"@Type":"2c41fa04:IDictionary","@Value":{}},"TypeGuid":"(Guid)f8a58466-d7f6-439f-bbb8-d4600e41d099","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","Guid":"System.Guid","string":"System.String"}},"object":{"Graph":{"@Type":"f8a58466","@Value":{"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)// Simulated behavior\n// direction := TO_UPPER(Side);\nIF Side = 'LEFT' THEN\n    // Do something for left rotation\n    // For demo, just print or simulate log\n    ; // Can add logging or effect\nELSIF Side = 'RIGHT' THEN\n    // Do something for right rotation\n    ;\nELSE\n    ; // Invalid direction\nEND_IF;\n\nInvocationCount := InvocationCount + 1; // Increase method call count\ndistributore.openV1(Speed);\nActualSpeed := Speed;\n","LineInfoPersistence":"(string)6bf8d216-403a-4151-a495-aad41c22b140_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)METHOD Rotate\nVAR_INPUT\n    Side : STRING;  // \"Left\" or \"Right\"\n    Speed : REAL;   // Rotation speed\nEND_VAR\nVAR_OUTPUT\n\tActualSpeed: REAL;\nEND_VAR","LineInfoPersistence":"(string)6bf8d216-403a-4151-a495-aad41c22b140_Decl_LineIds"}}}}}},"TypeInfos":{"3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","f8a58466":"{f8a58466-d7f6-439f-bbb8-d4600e41d099}","string":"System.String"}}},"FormatVersion":"1.0"}